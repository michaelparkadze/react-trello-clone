[{"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js":"1","/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js":"2","/Users/michaelparkadze/Repos/react-trello-clone/src/App.js":"3","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/store.js":"4","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/rootReducer.js":"5","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx":"6","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/listReducer.js":"7","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/boardReducer.js":"8","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/cardReducer.js":"9","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx":"10","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/constants.js":"11","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx":"12","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx":"13","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/boardActions.js":"14","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/cardActions.js":"15","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/listActions.js":"16","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx":"17","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx":"18","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx":"19","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx":"20","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx":"21","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx":"22","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx":"23","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js":"24","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js":"25","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js":"26","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js":"27","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js":"28","/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js":"29","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx":"30","/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js":"31","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js":"32"},{"size":589,"mtime":1610893239183,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610466546218,"results":"35","hashOfConfig":"34"},{"size":218,"mtime":1610994160834,"results":"36","hashOfConfig":"34"},{"size":297,"mtime":1610466546218,"results":"37","hashOfConfig":"34"},{"size":322,"mtime":1610466546217,"results":"38","hashOfConfig":"34"},{"size":894,"mtime":1610994269116,"results":"39","hashOfConfig":"34"},{"size":3035,"mtime":1610470013762,"results":"40","hashOfConfig":"34"},{"size":2034,"mtime":1610470685038,"results":"41","hashOfConfig":"34"},{"size":856,"mtime":1610466546217,"results":"42","hashOfConfig":"34"},{"size":412,"mtime":1610994526257,"results":"43","hashOfConfig":"34"},{"size":438,"mtime":1610466546217,"results":"44","hashOfConfig":"34"},{"size":3539,"mtime":1610949323557,"results":"45","hashOfConfig":"34"},{"size":7574,"mtime":1610994615033,"results":"46","hashOfConfig":"34"},{"size":336,"mtime":1610466546216,"results":"47","hashOfConfig":"34"},{"size":533,"mtime":1610466546216,"results":"48","hashOfConfig":"34"},{"size":1532,"mtime":1610466546217,"results":"49","hashOfConfig":"34"},{"size":274,"mtime":1610952474929,"results":"50","hashOfConfig":"34"},{"size":3219,"mtime":1610995036128,"results":"51","hashOfConfig":"34"},{"size":689,"mtime":1610994675412,"results":"52","hashOfConfig":"34"},{"size":716,"mtime":1610953816236,"results":"53","hashOfConfig":"34"},{"size":1122,"mtime":1610995066489,"results":"54","hashOfConfig":"34"},{"size":2473,"mtime":1610883996886,"results":"55","hashOfConfig":"34"},{"size":3329,"mtime":1610883985779,"results":"56","hashOfConfig":"34"},{"size":170,"mtime":1610880395641,"results":"57","hashOfConfig":"34"},{"size":498,"mtime":1610897379809,"results":"58","hashOfConfig":"34"},{"size":4493,"mtime":1610983224112,"results":"59","hashOfConfig":"34"},{"size":328,"mtime":1610896927161,"results":"60","hashOfConfig":"34"},{"size":662,"mtime":1610898780210,"results":"61","hashOfConfig":"34"},{"size":612,"mtime":1610884346871,"results":"62","hashOfConfig":"34"},{"size":1202,"mtime":1610949501278,"results":"63","hashOfConfig":"34"},{"size":462,"mtime":1610895210359,"results":"64","hashOfConfig":"34"},{"size":864,"mtime":1610896234222,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1aq6zp0",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js",[],["140","141"],"/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/App.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/store.js",[],["142","143"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/rootReducer.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/listReducer.js",["144"],"import {\n  ADD_LIST,\n  DELETE_LIST,\n  DRAG_HAPPENED,\n  CREATE_CARD,\n  EDIT_LIST_TITLE,\n} from \"../constants\";\n\nconst initialState = {\n  lists: [\n    {\n      id: \"list-0\",\n      cards: [\"card-0\"],\n      title: \"myList\",\n      board: \"board-0\",\n    },\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_LIST_TITLE: {\n      const { listId, newTitle, boardId } = action.payload;\n\n      const listsClone = [...state.lists];\n      const list = listsClone.find(\n        (item) => item.id === listId && item.board === boardId\n      );\n      list.title = newTitle;\n\n      return {\n        ...state,\n        lists: listsClone,\n      };\n    }\n    case ADD_LIST: {\n      const { title, id, boardId } = action.payload;\n\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: [],\n        board: boardId,\n      };\n\n      const listsClone = [...state.lists];\n      listsClone.push(newList);\n\n      const newState = { ...state, lists: listsClone };\n\n      return newState;\n    }\n\n    case CREATE_CARD: {\n      const { listId, id } = action.payload;\n      const listsClone = [...state.lists];\n      const list = listsClone.find((item) => item.id === listId);\n      list.cards.push(`card-${id}`);\n\n      return { ...state, lists: listsClone };\n    }\n\n    case DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        type,\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const listsClone = [...state.lists];\n        const list = listsClone.find((item) => item.id === droppableIdStart);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        console.log(action.payload);\n\n        return { ...state, lists: listsClone };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        const listsClone = [...state.lists];\n        // find the list where the drag happened\n        const listStart = listsClone.find(\n          (item) => item.id === droppableIdStart\n        );\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = listsClone.find((item) => item.id === droppableIdEnd);\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          lists: listsClone,\n        };\n      }\n      return state;\n\n    case DELETE_LIST: {\n      const { listId } = action.payload;\n      const listsClone = [...state.lists];\n      listsClone.filter((item) => item.id !== listId);\n\n      return {\n        ...state,\n        lists: listsClone,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/boardReducer.js",["145","146"],"import {\n  CREATE_BOARD,\n  SET_ACTIVE_BOARD,\n  DRAG_HAPPENED,\n  ADD_LIST,\n  DELETE_BOARD,\n  DELETE_LIST,\n} from \"../constants\";\n\nconst initialState = {\n  boards: [\n    {\n      id: \"board-0\",\n      lists: [\"list-0\"],\n      title: \"myboard\",\n    },\n  ],\n  activeBoard: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_LIST: {\n      const { boardId, id } = action.payload;\n\n      // const board = state[boardId];\n      const boardsClone = [...state.boards];\n      const board = boardsClone.find((item) => item.id === boardId);\n      const newListId = `list-${id}`;\n      const newLists = [...board.lists, newListId];\n      board.lists = newLists;\n      return { ...state, boards: boardsClone };\n    }\n\n    case DRAG_HAPPENED: {\n      const { boardId } = action.payload;\n      const board = state.boards.find((board) => board.id === boardId);\n      const lists = board.lists;\n      const { droppableIndexEnd, droppableIndexStart, type } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardId]: board };\n      }\n      return state;\n    }\n    case DELETE_LIST: {\n      const { listId, boardId } = action.payload;\n      const board = state[boardId];\n      const lists = board.lists;\n      const newLists = lists.filter((id) => id !== listId);\n      board.lists = newLists;\n      return { ...state, [boardId]: board };\n    }\n\n    case CREATE_BOARD: {\n      const { title, id } = action.payload;\n\n      const boardsCopy = [...state.boards];\n      const newBoard = {\n        id: id,\n        title: title,\n        lists: [],\n      };\n      boardsCopy.push(newBoard);\n\n      return { ...state, boards: boardsCopy };\n    }\n\n    case SET_ACTIVE_BOARD: {\n      return {\n        ...state,\n        activeBoard: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/cardReducer.js",["147"],"import { CREATE_CARD, DELETE_CARD, EDIT_CARD } from \"../constants\";\n\nconst initialState = {\n  \"card-0\": {\n    title: \"Last Episode\",\n    id: `card-0`,\n    list: \"list-0\",\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_CARD: {\n      const { title, listId, id } = action.payload;\n\n      const newCard = {\n        title,\n        id: `card-${id}`,\n        list: listId,\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/constants.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx",["148","149","150","151","152"],"import { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CreateBoardModal from \"../../components/CreateBoardModal\";\nimport { mergeDataWithKey } from \"../../utils\";\nimport { db, auth, firebase } from \"../../firebase\";\nimport { Button } from \"antd\";\nimport { UserContext } from \"../../providers/UserProvider\";\n\nfunction Boards(props) {\n  const user = useContext(UserContext);\n  // const { authenticated } = props;\n  // const dispatch = useDispatch();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [boards, setBoards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // const { boards, error } = useSelector((state) => state.boardReducer);\n  // const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  // useEffect(() => {}, []);\n  // const handleOnChange = (e) => {\n  //   const newBoardTitle = e.target.value;\n  //   setNewBoardTitle(newBoardTitle);\n  // };\n\n  // Get boards\n  useEffect(() => {\n    console.log(props);\n    // setLoading(true);\n    db.onceGetBoards()\n      .then((snapshot) => {\n        if (!snapshot.val()) {\n          return;\n        }\n        setBoards(mergeDataWithKey(snapshot.val()));\n      })\n      .catch((err) => {\n        console.log(\"erorr\");\n        console.error(err);\n      });\n\n    // .then((snapshot) => {\n    //   console.log(\"something\");\n    //   if (!snapshot.val()) {\n    //     return;\n    //   } else {\n    //     console.log(\"setting boards data\");\n    //     setBoards(mergeDataWithKey(snapshot.val()));\n    //   }\n    // })\n    // .finally(() => {\n    //   console.log(\"shit\");\n    //   setLoading(false);\n    // });\n  }, []);\n\n  // Create a new board\n  const handleCreateBoard = (board) => {\n    // console.log(board);\n    db.doCreateBoard(board).then((response) => {\n      console.log(response);\n      let updatedBoards = boards;\n      updatedBoards.push(response);\n      setBoards(updatedBoards);\n    });\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <div>\n      aye\n      {boards?.map((board, index) => {\n        return (\n          <Link to={`b/${board.key}/${board.title}`} key={index}>\n            <div>{board.title}</div>\n          </Link>\n        );\n      })}\n      <CreateBoardModal\n        onCreateBoard={handleCreateBoard}\n        onCloseModal={handleModalClose}\n        visible={modalOpen}\n      />\n      <Button onClick={() => handleModalOpen()}>Create a board</Button>\n      <Button onClick={() => console.log(boards)}>Check boards</Button>\n      <Button onClick={auth.doSignOut}>Sign out</Button>\n    </div>\n  );\n\n  // return (\n  //   <div className=\"home-container\">\n  //     <div className=\"home-container__boards\">\n  //       {boards?.map((board, index) => {\n  //         return (\n  //           <Link to={`/b/${board.id}/${board.title}`}>\n  //             <button>{board.title}</button>\n  //           </Link>\n  //         );\n  //       })}\n  //     </div>\n  //     <form className=\"home-container__create-board\" onSubmit={handleOnSubmit}>\n  //       <div className=\"home-container__create-board__title\">\n  //         Create a new Board\n  //       </div>\n  //       <input\n  //         type=\"text\"\n  //         placeholder=\"Your boards title...\"\n  //         value={newBoardTitle}\n  //         onChange={handleOnChange}\n  //       />\n  //       <input type=\"submit\" value=\"Create\" />\n  //     </form>\n  //     {error && <span>{error}</span>}\n  //   </div>\n  // );\n}\n\nexport default Boards;\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx",["153","154","155","156","157","158","159","160"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/boardActions.js",[],["161","162"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/cardActions.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/listActions.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx",["163","164","165"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx",["166","167"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx",["168","169"],"import { Draggable } from \"react-beautiful-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport \"./styles.scss\";\n\nexport default function Card(props) {\n  // const dispatch = useDispatch();\n\n  const { index, key, title, cardKey } = props;\n  return (\n    <Draggable draggableId={String(cardKey)} index={index}>\n      {(provided) => (\n        <>\n          <div\n            className=\"card-container\"\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            // onDoubleClick={() => setIsEditing(true)}\n          >\n            <div className=\"card-container__content\">{title}</div>\n          </div>\n        </>\n      )}\n    </Draggable>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx",["170"],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx",["171"],"import { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport \"./styles.scss\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\n\nexport default function SignIn() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { email, password } = userDetails;\n\n    return auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => history.push(\"/boards\"))\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-in-container\">\n      <Form>\n        <h1>Sign in</h1>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign in\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          <div style={{ marginBottom: \"12px\" }}>\n            <Link to=\"/forgot-password\">Forgot your password?</Link>\n          </div>\n          Don't have an account? <Link to=\"/sign-up\">Sign up</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx",["172","173"],"import { useState } from \"react\";\nimport { auth, db } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox, Icon } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport \"./styles.scss\";\n\nexport default function SignUp() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { fullName, email, password } = userDetails;\n\n    return auth\n      .doCreateUserWithEmailAndPassword(email, password, fullName)\n      .then((authUser) => {\n        db.doCreateUser(authUser.user.uid, fullName, email);\n        history.push(\"/boards\");\n      })\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <Form>\n        <h1>Sign up</h1>\n\n        <Form.Item\n          name=\"fullName\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"fullName\"\n            placeholder=\"Enter your full name\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmPassword\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign up\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          Already have an account? <Link to=\"/sign-in\">Sign in</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js",["174","175"],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":20,"column":1,"nodeType":"184","endLine":122,"endColumn":3},{"ruleId":"185","severity":1,"message":"186","line":6,"column":3,"nodeType":"187","messageId":"188","endLine":6,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":21,"column":1,"nodeType":"184","endLine":83,"endColumn":3},{"ruleId":"182","severity":1,"message":"183","line":11,"column":1,"nodeType":"184","endLine":40,"endColumn":3},{"ruleId":"185","severity":1,"message":"189","line":5,"column":20,"nodeType":"187","messageId":"188","endLine":5,"endColumn":28},{"ruleId":"185","severity":1,"message":"190","line":10,"column":9,"nodeType":"187","messageId":"188","endLine":10,"endColumn":13},{"ruleId":"185","severity":1,"message":"191","line":16,"column":10,"nodeType":"187","messageId":"188","endLine":16,"endColumn":17},{"ruleId":"185","severity":1,"message":"192","line":16,"column":19,"nodeType":"187","messageId":"188","endLine":16,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":55,"column":6,"nodeType":"195","endLine":55,"endColumn":8,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":26},{"ruleId":"185","severity":1,"message":"198","line":12,"column":9,"nodeType":"187","messageId":"188","endLine":12,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":220,"column":3,"nodeType":"201","messageId":"202","endLine":228,"endColumn":5},{"ruleId":"185","severity":1,"message":"203","line":220,"column":9,"nodeType":"187","messageId":"188","endLine":220,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":224,"column":7,"nodeType":"187","messageId":"206","endLine":224,"endColumn":18},{"ruleId":"185","severity":1,"message":"207","line":224,"column":7,"nodeType":"187","messageId":"188","endLine":224,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":230,"column":3,"nodeType":"201","messageId":"202","endLine":236,"endColumn":5},{"ruleId":"185","severity":1,"message":"208","line":230,"column":9,"nodeType":"187","messageId":"188","endLine":230,"endColumn":25},{"ruleId":"176","replacedBy":"209"},{"ruleId":"178","replacedBy":"210"},{"ruleId":"185","severity":1,"message":"211","line":11,"column":10,"nodeType":"187","messageId":"188","endLine":11,"endColumn":19},{"ruleId":"185","severity":1,"message":"212","line":11,"column":21,"nodeType":"187","messageId":"188","endLine":11,"endColumn":33},{"ruleId":"193","severity":1,"message":"213","line":37,"column":6,"nodeType":"195","endLine":37,"endColumn":8,"suggestions":"214"},{"ruleId":"185","severity":1,"message":"215","line":7,"column":18,"nodeType":"187","messageId":"188","endLine":7,"endColumn":25},{"ruleId":"193","severity":1,"message":"216","line":11,"column":6,"nodeType":"195","endLine":11,"endColumn":8,"suggestions":"217"},{"ruleId":"185","severity":1,"message":"218","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"219","line":8,"column":18,"nodeType":"187","messageId":"188","endLine":8,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":39,"column":9,"nodeType":"222","endLine":39,"endColumn":41},{"ruleId":"185","severity":1,"message":"223","line":4,"column":31,"nodeType":"187","messageId":"188","endLine":4,"endColumn":39},{"ruleId":"185","severity":1,"message":"223","line":4,"column":31,"nodeType":"187","messageId":"188","endLine":4,"endColumn":39},{"ruleId":"185","severity":1,"message":"224","line":4,"column":41,"nodeType":"187","messageId":"188","endLine":4,"endColumn":45},{"ruleId":"185","severity":1,"message":"225","line":147,"column":44,"nodeType":"187","messageId":"188","endLine":147,"endColumn":52},{"ruleId":"185","severity":1,"message":"226","line":162,"column":7,"nodeType":"187","messageId":"188","endLine":162,"endColumn":11},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],["227"],["228"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'DELETE_BOARD' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'user' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'Link' is defined but never used.","'history' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'handleUpdateList' is assigned a value but never used.","no-const-assign","'updatedList' is constant.","const","'updatedList' is assigned a value but never used.","'handleDeleteList' is assigned a value but never used.",["227"],["228"],"'cardTitle' is assigned a value but never used.","'setCardTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'listKey' and 'setCards'. Either include them or remove the dependency array.",["230"],"'listKey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["231"],"'useDispatch' is defined but never used.","'key' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'Icon' is defined but never used.","'newIndex' is assigned a value but never used.","'card' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [props]",{"range":"238","text":"239"},"Update the dependencies array to be: [listKey, setCards]",{"range":"240","text":"241"},"Update the dependencies array to be: [title]",{"range":"242","text":"243"},[1647,1649],"[props]",[947,949],"[listKey, setCards]",[287,289],"[title]"]