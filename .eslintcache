[{"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js":"1","/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js":"2","/Users/michaelparkadze/Repos/react-trello-clone/src/App.js":"3","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx":"4","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx":"5","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx":"6","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx":"7","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx":"8","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx":"9","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx":"10","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx":"11","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx":"12","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx":"13","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx":"14","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js":"15","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js":"16","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js":"17","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js":"18","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js":"19","/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js":"20","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx":"21","/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js":"22","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js":"23","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardCard/index.jsx":"24","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Loader/index.jsx":"25","/Users/michaelparkadze/Repos/react-trello-clone/src/components/BoardTitle/index.jsx":"26","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CardModal/index.jsx":"27","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Account/index.jsx":"28"},{"size":589,"mtime":1610893239183,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1610466546218,"results":"31","hashOfConfig":"30"},{"size":218,"mtime":1610994160834,"results":"32","hashOfConfig":"30"},{"size":867,"mtime":1611240563266,"results":"33","hashOfConfig":"30"},{"size":1812,"mtime":1611240748445,"results":"34","hashOfConfig":"30"},{"size":2302,"mtime":1611216830778,"results":"35","hashOfConfig":"30"},{"size":10455,"mtime":1611221726254,"results":"36","hashOfConfig":"30"},{"size":1179,"mtime":1611236845684,"results":"37","hashOfConfig":"30"},{"size":2854,"mtime":1611240262195,"results":"38","hashOfConfig":"30"},{"size":2323,"mtime":1611162480706,"results":"39","hashOfConfig":"30"},{"size":3937,"mtime":1611244550894,"results":"40","hashOfConfig":"30"},{"size":2050,"mtime":1611152129220,"results":"41","hashOfConfig":"30"},{"size":2473,"mtime":1610883996886,"results":"42","hashOfConfig":"30"},{"size":3329,"mtime":1610883985779,"results":"43","hashOfConfig":"30"},{"size":170,"mtime":1610880395641,"results":"44","hashOfConfig":"30"},{"size":498,"mtime":1610897379809,"results":"45","hashOfConfig":"30"},{"size":4503,"mtime":1611159734604,"results":"46","hashOfConfig":"30"},{"size":328,"mtime":1610896927161,"results":"47","hashOfConfig":"30"},{"size":662,"mtime":1610898780210,"results":"48","hashOfConfig":"30"},{"size":403,"mtime":1611240289533,"results":"49","hashOfConfig":"30"},{"size":1202,"mtime":1610949501278,"results":"50","hashOfConfig":"30"},{"size":462,"mtime":1610895210359,"results":"51","hashOfConfig":"30"},{"size":905,"mtime":1611156088687,"results":"52","hashOfConfig":"30"},{"size":232,"mtime":1611153775215,"results":"53","hashOfConfig":"30"},{"size":277,"mtime":1611155708421,"results":"54","hashOfConfig":"30"},{"size":2044,"mtime":1611240579271,"results":"55","hashOfConfig":"30"},{"size":3825,"mtime":1611240229172,"results":"56","hashOfConfig":"30"},{"size":2598,"mtime":1611244219903,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1aq6zp0",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js",[],["120","121"],"/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/App.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx",["122"],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx",["123"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx",["124"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx",["125"],"import { useState, useEffect } from \"react\";\nimport { Menu, Dropdown, Button, Space, Input } from \"antd\";\nimport { MoreOutlined } from \"@ant-design/icons\";\n\nexport default function ListHeader(props) {\n  const [listHeader, setListHeader] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n\n  const { title, listKey, handleUpdateList, handleDeleteList } = props;\n\n  useEffect(() => {\n    setListHeader(title);\n  }, []);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setListHeader(e.target.value);\n  };\n\n  const handleEnableEdit = () => {\n    setEditing(true);\n    setListHeader(title);\n  };\n\n  const handleFormSubmit = (event, callback, listKey, listTitle) => {\n    event.preventDefault();\n\n    if (listHeader !== \"\") {\n      callback(listKey, listTitle).then(() => {\n        setListHeader(\"\");\n        setEditing(false);\n      });\n    }\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item onClick={() => handleDeleteList(listKey)}>\n        Delete this list\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"list-container__content__header\">\n      {editing ? (\n        <form\n          onSubmit={(event) =>\n            handleFormSubmit(event, handleUpdateList, listKey, listHeader)\n          }\n          onBlur={(event) =>\n            handleFormSubmit(event, handleUpdateList, listKey, listHeader)\n          }\n        >\n          <Input\n            type=\"text\"\n            value={listHeader}\n            onChange={(e) => handleInputChange(e)}\n            autoFocus\n          />\n        </form>\n      ) : (\n        <>\n          <div onClick={() => handleEnableEdit()} style={{ cursor: \"pointer\" }}>\n            {title}\n          </div>\n        </>\n      )}\n      <Space direction=\"vertical\">\n        <Space wrap>\n          <Dropdown\n            overlay={menu}\n            trigger={[\"click\"]}\n            placement=\"bottomRight\"\n            style={{ backgroundColor: \"red\" }}\n          >\n            <Button\n              shape=\"circle\"\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              icon={\n                <MoreOutlined\n                  style={{ transform: \"rotate(90deg)\", fontSize: 22 }}\n                />\n              }\n              className=\"list-menu\"\n            />\n          </Dropdown>\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx",["126"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx",["127"],"import { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport \"./styles.scss\";\n\nexport default function CreateCard(props) {\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const { listKey, handleCreateCard, creatingCard, handleCreatingCard } = props;\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (cardTitle !== \"\") {\n      handleCreateCard({ cardTitle, listKey });\n      setCardTitle(\"\");\n      handleCreatingCard(false);\n    }\n  };\n\n  const { TextArea } = Input;\n\n  return (\n    <div className=\"create-card\">\n      {creatingCard ? (\n        <div className=\"create-card-form-container\">\n          <TextArea\n            value={cardTitle}\n            placeholder=\"Enter the title for this card...\"\n            onSubmit={(event) => handleOnSubmit(event)}\n            // onBlur={() => {\n            //   setCardTitle(\"\");\n            //   handleCreatingCard(false);\n            // }}\n            rows={2}\n            onChange={(e) => setCardTitle(e.target.value)}\n            autoFocus\n          />\n          <Button\n            type=\"primary\"\n            style={{\n              borderRadius: \"12px\",\n              fontWeight: 500,\n              border: \"rgb(60, 64, 82)\",\n              backgroundImage: \"linear-gradient(45deg, #606c88, #3f4c6b)\",\n              marginRight: \"8px\",\n            }}\n            onClick={(event) => handleOnSubmit(event)}\n            // disabled={cardTitle === \"\"}\n          >\n            Create\n          </Button>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            style={{\n              fontWeight: 500,\n              color: \"#3f4c6b\",\n              backgroundColor: \"#fff\",\n              boxShadow: \"none\",\n              border: \"1px solid #3f4c6b\",\n            }}\n            onClick={() => {\n              setCardTitle(\"\");\n              handleCreatingCard(false);\n            }}\n          >\n            X\n          </Button>\n        </div>\n      ) : (\n        <a onClick={handleCreatingCard}>+ Add Card</a>\n      )}\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx",["128"],"import { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport \"./styles.scss\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\n\nexport default function SignIn() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { email, password } = userDetails;\n\n    return auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => history.push(\"/boards\"))\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-in-container\">\n      <Form>\n        <h1>Sign in</h1>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign in\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          <div style={{ marginBottom: \"12px\" }}>\n            <Link to=\"/forgot-password\">Forgot your password?</Link>\n          </div>\n          Don't have an account? <Link to=\"/sign-up\">Sign up</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx",["129","130"],"import { useState } from \"react\";\nimport { auth, db } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox, Icon } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport \"./styles.scss\";\n\nexport default function SignUp() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { fullName, email, password } = userDetails;\n\n    return auth\n      .doCreateUserWithEmailAndPassword(email, password, fullName)\n      .then((authUser) => {\n        db.doCreateUser(authUser.user.uid, fullName, email);\n        history.push(\"/boards\");\n      })\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <Form>\n        <h1>Sign up</h1>\n\n        <Form.Item\n          name=\"fullName\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"fullName\"\n            placeholder=\"Enter your full name\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmPassword\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign up\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          Already have an account? <Link to=\"/sign-in\">Sign in</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js",["131","132"],"import { db } from \"./firebase\";\nimport { getUser } from \"./user\";\n\nconst boardsRef = db.ref(\"boards\");\nconst listsRef = db.ref(\"lists\");\nconst cardsRef = db.ref(\"cards\");\n\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email,\n  });\n\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\n\nexport const doCreateBoard = async (board) => {\n  const uid = getUser().uid;\n  const id = boardsRef.push().key;\n  await boardsRef.child(uid).child(id).set(board);\n  board.key = id;\n  return board;\n};\n\nexport const doDeleteBoard = async (boardKey) => {\n  const uid = getUser().uid;\n  await boardsRef.child(uid).child(boardKey).remove();\n};\n\nexport const doUpdateBoard = async (boardKey, title) => {\n  const uid = getUser().uid;\n  await boardsRef\n    .child(uid)\n    .child(boardKey)\n    .update({\n      ...title,\n    });\n};\n\nexport const onceGetBoards = () => {\n  const uid = getUser().uid;\n  return boardsRef.child(uid).once(\"value\");\n};\n\nexport const doEditBoard = async (boardKey, board) => {\n  const uid = getUser().uid;\n\n  await boardsRef\n    .child(uid)\n    .child(boardKey)\n    .update({\n      ...board,\n    });\n  return board;\n};\n\nexport const onceGetBoard = (boardKey) => {\n  const uid = getUser().uid;\n\n  return boardsRef.child(uid).child(`${boardKey}`).once(\"value\");\n};\n\nexport const onListMove = async (params) => {\n  const { boardKey, lists } = params;\n  console.log(lists);\n  var updates = {};\n\n  lists.forEach((list, index) => {\n    console.log(listsRef);\n    const newList = { ...list, index };\n    updates[list.key] = newList;\n  });\n\n  listsRef.child(boardKey).update(updates);\n};\n\nexport const onceGetLists = (key) => listsRef.child(key).once(\"value\");\n\nexport const doCreateList = async (boardKey, list) => {\n  let listIndex;\n  // Get amount of lists to determine new list index\n  listsRef\n    .child(boardKey)\n    .once(\"value\")\n    .then((snapshot) => {\n      const listsObject = snapshot.val();\n      listIndex = Object.keys(listsObject).length;\n    });\n\n  const id = listsRef.push().key;\n  await listsRef.child(boardKey).child(id).set(list);\n  list.key = id;\n  list.index = listIndex - 1;\n  return list;\n};\n\nexport const doDeleteList = (boardKey, listKey) =>\n  db\n    .ref(`lists/${boardKey}`)\n    .child(`${listKey}`)\n    .remove()\n    .then(() => db.ref(\"cards/\").child(`${listKey}`).remove());\n\nexport const doUpdateList = async (boardKey, listKey, list) => {\n  await listsRef\n    .child(boardKey)\n    .child(listKey)\n    .update({\n      ...list,\n    });\n  return list;\n};\n\nexport const doAddCard = async (listKey, cardTitle) => {\n  let cardIndex;\n  // Get amount of lists to determine new list index\n  await db\n    .ref(`cards/${listKey}`)\n    .once(\"value\")\n    .then((snapshot) => {\n      const cardsObject = snapshot.val();\n      if (cardsObject !== undefined && cardsObject !== null) {\n        cardIndex = Object.keys(cardsObject).length;\n      } else cardIndex = 0;\n    });\n\n  db.ref(`cards/${listKey}`).push({\n    title: cardTitle,\n    index: cardIndex,\n  });\n};\n\nexport const onceGetCard = (listKey) =>\n  db.ref(`cards/${listKey}`).once(\"value\");\n\nexport const doEditCard = async (listKey, cardKey, card) => {\n  await cardsRef\n    .child(listKey)\n    .child(cardKey)\n    .update({\n      ...card,\n    });\n  card.key = cardKey;\n  return card;\n};\n\nexport const doMoveCard = async (params) => {\n  const { oldListKey, newListKey, cardKey, newIndex, cards } = params;\n\n  // we copy the card details\n  // we remove it from the old list\n  // and we insert it in the new list\n\n  // If its same list\n  // Change\n\n  let card;\n  await db\n    .ref(`cards/${oldListKey}`)\n    .child(`${cardKey}`)\n    .once(\"value\")\n    .then((snapshot) => {\n      card = snapshot.val();\n    });\n\n  var updates = {};\n\n  cards.forEach((card, index) => {\n    const newCard = { ...card, index };\n    updates[card.key] = newCard;\n  });\n\n  db.ref(`cards/${oldListKey}`)\n    .child(`${cardKey}`)\n    .remove()\n    .then(() => {\n      // remove the card from old list\n      // and update all cards on new list\n\n      db.ref(`cards/${newListKey}`).update(updates);\n      // console.log(\"editing \");\n    });\n\n  return onceGetCard(newListKey);\n\n  // db.ref(`cards/${oldListKey}`)\n  //   .child(`${cardKey}`)\n  //   .remove()\n  //   .then(() =>\n  //     db.ref(`cards/${newListKey}/${cardKey}`).set({\n  //       ...card,\n  //     })\n  //   );\n};\n\nexport const doDeleteCard = (listKey, cardKey) =>\n  db.ref(`cards/${listKey}/`).child(`${cardKey}`).remove();\n","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardCard/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/Loader/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/BoardTitle/index.jsx",["133"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CardModal/index.jsx",["134","135"],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Account/index.jsx",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":41,"nodeType":"142","messageId":"143","endLine":3,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":46,"column":6,"nodeType":"146","endLine":46,"endColumn":19,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":39,"column":6,"nodeType":"146","endLine":39,"endColumn":8,"suggestions":"149"},{"ruleId":"144","severity":1,"message":"150","line":13,"column":6,"nodeType":"146","endLine":13,"endColumn":8,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":27,"column":6,"nodeType":"146","endLine":27,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":69,"column":9,"nodeType":"156","endLine":69,"endColumn":41},{"ruleId":"140","severity":1,"message":"157","line":4,"column":31,"nodeType":"142","messageId":"143","endLine":4,"endColumn":39},{"ruleId":"140","severity":1,"message":"157","line":4,"column":31,"nodeType":"142","messageId":"143","endLine":4,"endColumn":39},{"ruleId":"140","severity":1,"message":"158","line":4,"column":41,"nodeType":"142","messageId":"143","endLine":4,"endColumn":45},{"ruleId":"140","severity":1,"message":"159","line":147,"column":44,"nodeType":"142","messageId":"143","endLine":147,"endColumn":52},{"ruleId":"140","severity":1,"message":"160","line":162,"column":7,"nodeType":"142","messageId":"143","endLine":162,"endColumn":11},{"ruleId":"144","severity":1,"message":"150","line":11,"column":6,"nodeType":"146","endLine":11,"endColumn":8,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"162","line":26,"column":6,"nodeType":"146","endLine":26,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":91,"column":13,"nodeType":"166","endLine":95,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'listKey' and 'setCards'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'props' and 'title'. Either include them or remove the dependency array.",["172"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'Icon' is defined but never used.","'newIndex' is assigned a value but never used.","'card' is assigned a value but never used.",["173"],"React Hook useEffect has a missing dependency: 'cardDescription'. Either include it or remove the dependency array.",["174"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"179","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [cards, dataFetched]",{"range":"186","text":"187"},"Update the dependencies array to be: [listKey, setCards]",{"range":"188","text":"189"},"Update the dependencies array to be: [title]",{"range":"190","text":"191"},"Update the dependencies array to be: [props, title]",{"range":"192","text":"193"},{"range":"194","text":"191"},"Update the dependencies array to be: [cardDescription]",{"range":"195","text":"196"},[1542,1555],"[cards, dataFetched]",[956,958],"[listKey, setCards]",[427,429],"[title]",[710,712],"[props, title]",[321,323],[560,562],"[cardDescription]"]