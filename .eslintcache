[{"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js":"1","/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js":"2","/Users/michaelparkadze/Repos/react-trello-clone/src/App.js":"3","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/store.js":"4","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/rootReducer.js":"5","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx":"6","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/listReducer.js":"7","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/boardReducer.js":"8","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/cardReducer.js":"9","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx":"10","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/constants.js":"11","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx":"12","/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx":"13","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/boardActions.js":"14","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/cardActions.js":"15","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/listActions.js":"16","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx":"17","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx":"18","/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx":"19","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx":"20","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx":"21","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx":"22","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx":"23","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js":"24","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js":"25","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js":"26","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js":"27","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js":"28","/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js":"29","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx":"30","/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js":"31","/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js":"32","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardCard/index.jsx":"33","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Loader/index.jsx":"34","/Users/michaelparkadze/Repos/react-trello-clone/src/components/BoardTitle/index.jsx":"35","/Users/michaelparkadze/Repos/react-trello-clone/src/components/CardModal/index.jsx":"36"},{"size":589,"mtime":1610893239183,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1610466546218,"results":"39","hashOfConfig":"38"},{"size":218,"mtime":1610994160834,"results":"40","hashOfConfig":"38"},{"size":297,"mtime":1610466546218,"results":"41","hashOfConfig":"38"},{"size":322,"mtime":1610466546217,"results":"42","hashOfConfig":"38"},{"size":760,"mtime":1611160409635,"results":"43","hashOfConfig":"38"},{"size":3035,"mtime":1610470013762,"results":"44","hashOfConfig":"38"},{"size":2034,"mtime":1610470685038,"results":"45","hashOfConfig":"38"},{"size":856,"mtime":1610466546217,"results":"46","hashOfConfig":"38"},{"size":1641,"mtime":1611216927470,"results":"47","hashOfConfig":"38"},{"size":438,"mtime":1610466546217,"results":"48","hashOfConfig":"38"},{"size":2302,"mtime":1611216830778,"results":"49","hashOfConfig":"38"},{"size":10455,"mtime":1611221726254,"results":"50","hashOfConfig":"38"},{"size":336,"mtime":1610466546216,"results":"51","hashOfConfig":"38"},{"size":533,"mtime":1610466546216,"results":"52","hashOfConfig":"38"},{"size":1532,"mtime":1610466546217,"results":"53","hashOfConfig":"38"},{"size":1179,"mtime":1611236845684,"results":"54","hashOfConfig":"38"},{"size":2854,"mtime":1611239980924,"results":"55","hashOfConfig":"38"},{"size":2323,"mtime":1611162480706,"results":"56","hashOfConfig":"38"},{"size":3921,"mtime":1611239964332,"results":"57","hashOfConfig":"38"},{"size":2050,"mtime":1611152129220,"results":"58","hashOfConfig":"38"},{"size":2473,"mtime":1610883996886,"results":"59","hashOfConfig":"38"},{"size":3329,"mtime":1610883985779,"results":"60","hashOfConfig":"38"},{"size":170,"mtime":1610880395641,"results":"61","hashOfConfig":"38"},{"size":498,"mtime":1610897379809,"results":"62","hashOfConfig":"38"},{"size":4503,"mtime":1611159734604,"results":"63","hashOfConfig":"38"},{"size":328,"mtime":1610896927161,"results":"64","hashOfConfig":"38"},{"size":662,"mtime":1610898780210,"results":"65","hashOfConfig":"38"},{"size":628,"mtime":1611160382087,"results":"66","hashOfConfig":"38"},{"size":1202,"mtime":1610949501278,"results":"67","hashOfConfig":"38"},{"size":462,"mtime":1610895210359,"results":"68","hashOfConfig":"38"},{"size":905,"mtime":1611156088687,"results":"69","hashOfConfig":"38"},{"size":232,"mtime":1611153775215,"results":"70","hashOfConfig":"38"},{"size":277,"mtime":1611155708421,"results":"71","hashOfConfig":"38"},{"size":2107,"mtime":1611218576503,"results":"72","hashOfConfig":"38"},{"size":4373,"mtime":1611240159697,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1aq6zp0",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michaelparkadze/Repos/react-trello-clone/src/index.js",[],["158","159"],"/Users/michaelparkadze/Repos/react-trello-clone/src/reportWebVitals.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/App.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/store.js",[],["160","161"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/rootReducer.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/listReducer.js",["162"],"import {\n  ADD_LIST,\n  DELETE_LIST,\n  DRAG_HAPPENED,\n  CREATE_CARD,\n  EDIT_LIST_TITLE,\n} from \"../constants\";\n\nconst initialState = {\n  lists: [\n    {\n      id: \"list-0\",\n      cards: [\"card-0\"],\n      title: \"myList\",\n      board: \"board-0\",\n    },\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_LIST_TITLE: {\n      const { listId, newTitle, boardId } = action.payload;\n\n      const listsClone = [...state.lists];\n      const list = listsClone.find(\n        (item) => item.id === listId && item.board === boardId\n      );\n      list.title = newTitle;\n\n      return {\n        ...state,\n        lists: listsClone,\n      };\n    }\n    case ADD_LIST: {\n      const { title, id, boardId } = action.payload;\n\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: [],\n        board: boardId,\n      };\n\n      const listsClone = [...state.lists];\n      listsClone.push(newList);\n\n      const newState = { ...state, lists: listsClone };\n\n      return newState;\n    }\n\n    case CREATE_CARD: {\n      const { listId, id } = action.payload;\n      const listsClone = [...state.lists];\n      const list = listsClone.find((item) => item.id === listId);\n      list.cards.push(`card-${id}`);\n\n      return { ...state, lists: listsClone };\n    }\n\n    case DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        type,\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const listsClone = [...state.lists];\n        const list = listsClone.find((item) => item.id === droppableIdStart);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        console.log(action.payload);\n\n        return { ...state, lists: listsClone };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        const listsClone = [...state.lists];\n        // find the list where the drag happened\n        const listStart = listsClone.find(\n          (item) => item.id === droppableIdStart\n        );\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = listsClone.find((item) => item.id === droppableIdEnd);\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          lists: listsClone,\n        };\n      }\n      return state;\n\n    case DELETE_LIST: {\n      const { listId } = action.payload;\n      const listsClone = [...state.lists];\n      listsClone.filter((item) => item.id !== listId);\n\n      return {\n        ...state,\n        lists: listsClone,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/boardReducer.js",["163","164"],"import {\n  CREATE_BOARD,\n  SET_ACTIVE_BOARD,\n  DRAG_HAPPENED,\n  ADD_LIST,\n  DELETE_BOARD,\n  DELETE_LIST,\n} from \"../constants\";\n\nconst initialState = {\n  boards: [\n    {\n      id: \"board-0\",\n      lists: [\"list-0\"],\n      title: \"myboard\",\n    },\n  ],\n  activeBoard: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_LIST: {\n      const { boardId, id } = action.payload;\n\n      // const board = state[boardId];\n      const boardsClone = [...state.boards];\n      const board = boardsClone.find((item) => item.id === boardId);\n      const newListId = `list-${id}`;\n      const newLists = [...board.lists, newListId];\n      board.lists = newLists;\n      return { ...state, boards: boardsClone };\n    }\n\n    case DRAG_HAPPENED: {\n      const { boardId } = action.payload;\n      const board = state.boards.find((board) => board.id === boardId);\n      const lists = board.lists;\n      const { droppableIndexEnd, droppableIndexStart, type } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardId]: board };\n      }\n      return state;\n    }\n    case DELETE_LIST: {\n      const { listId, boardId } = action.payload;\n      const board = state[boardId];\n      const lists = board.lists;\n      const newLists = lists.filter((id) => id !== listId);\n      board.lists = newLists;\n      return { ...state, [boardId]: board };\n    }\n\n    case CREATE_BOARD: {\n      const { title, id } = action.payload;\n\n      const boardsCopy = [...state.boards];\n      const newBoard = {\n        id: id,\n        title: title,\n        lists: [],\n      };\n      boardsCopy.push(newBoard);\n\n      return { ...state, boards: boardsCopy };\n    }\n\n    case SET_ACTIVE_BOARD: {\n      return {\n        ...state,\n        activeBoard: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/redux/reducers/cardReducer.js",["165"],"import { CREATE_CARD, DELETE_CARD, EDIT_CARD } from \"../constants\";\n\nconst initialState = {\n  \"card-0\": {\n    title: \"Last Episode\",\n    id: `card-0`,\n    list: \"list-0\",\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_CARD: {\n      const { title, listId, id } = action.payload;\n\n      const newCard = {\n        title,\n        id: `card-${id}`,\n        list: listId,\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Nav/index.jsx",["166"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/constants.js",[],["167","168"],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Boards/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/views/Board/index.jsx",["169"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/boardActions.js",[],["170","171"],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/cardActions.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/redux/actions/listActions.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateList/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/index.jsx",["172"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/List/ListHeader.jsx",["173"],"import { useState, useEffect } from \"react\";\nimport { Menu, Dropdown, Button, Space, Input } from \"antd\";\nimport { MoreOutlined } from \"@ant-design/icons\";\n\nexport default function ListHeader(props) {\n  const [listHeader, setListHeader] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n\n  const { title, listKey, handleUpdateList, handleDeleteList } = props;\n\n  useEffect(() => {\n    setListHeader(title);\n  }, []);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setListHeader(e.target.value);\n  };\n\n  const handleEnableEdit = () => {\n    setEditing(true);\n    setListHeader(title);\n  };\n\n  const handleFormSubmit = (event, callback, listKey, listTitle) => {\n    event.preventDefault();\n\n    if (listHeader !== \"\") {\n      callback(listKey, listTitle).then(() => {\n        setListHeader(\"\");\n        setEditing(false);\n      });\n    }\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item onClick={() => handleDeleteList(listKey)}>\n        Delete this list\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"list-container__content__header\">\n      {editing ? (\n        <form\n          onSubmit={(event) =>\n            handleFormSubmit(event, handleUpdateList, listKey, listHeader)\n          }\n          onBlur={(event) =>\n            handleFormSubmit(event, handleUpdateList, listKey, listHeader)\n          }\n        >\n          <Input\n            type=\"text\"\n            value={listHeader}\n            onChange={(e) => handleInputChange(e)}\n            autoFocus\n          />\n        </form>\n      ) : (\n        <>\n          <div onClick={() => handleEnableEdit()} style={{ cursor: \"pointer\" }}>\n            {title}\n          </div>\n        </>\n      )}\n      <Space direction=\"vertical\">\n        <Space wrap>\n          <Dropdown\n            overlay={menu}\n            trigger={[\"click\"]}\n            placement=\"bottomRight\"\n            style={{ backgroundColor: \"red\" }}\n          >\n            <Button\n              shape=\"circle\"\n              style={{ border: \"none\", boxShadow: \"none\" }}\n              icon={\n                <MoreOutlined\n                  style={{ transform: \"rotate(90deg)\", fontSize: 22 }}\n                />\n              }\n              className=\"list-menu\"\n            />\n          </Dropdown>\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/components/Card/index.jsx",["174"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateCard/index.jsx",["175"],"import { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport \"./styles.scss\";\n\nexport default function CreateCard(props) {\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const { listKey, handleCreateCard, creatingCard, handleCreatingCard } = props;\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (cardTitle !== \"\") {\n      handleCreateCard({ cardTitle, listKey });\n      setCardTitle(\"\");\n      handleCreatingCard(false);\n    }\n  };\n\n  const { TextArea } = Input;\n\n  return (\n    <div className=\"create-card\">\n      {creatingCard ? (\n        <div className=\"create-card-form-container\">\n          <TextArea\n            value={cardTitle}\n            placeholder=\"Enter the title for this card...\"\n            onSubmit={(event) => handleOnSubmit(event)}\n            // onBlur={() => {\n            //   setCardTitle(\"\");\n            //   handleCreatingCard(false);\n            // }}\n            rows={2}\n            onChange={(e) => setCardTitle(e.target.value)}\n            autoFocus\n          />\n          <Button\n            type=\"primary\"\n            style={{\n              borderRadius: \"12px\",\n              fontWeight: 500,\n              border: \"rgb(60, 64, 82)\",\n              backgroundImage: \"linear-gradient(45deg, #606c88, #3f4c6b)\",\n              marginRight: \"8px\",\n            }}\n            onClick={(event) => handleOnSubmit(event)}\n            // disabled={cardTitle === \"\"}\n          >\n            Create\n          </Button>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            style={{\n              fontWeight: 500,\n              color: \"#3f4c6b\",\n              backgroundColor: \"#fff\",\n              boxShadow: \"none\",\n              border: \"1px solid #3f4c6b\",\n            }}\n            onClick={() => {\n              setCardTitle(\"\");\n              handleCreatingCard(false);\n            }}\n          >\n            X\n          </Button>\n        </div>\n      ) : (\n        <a onClick={handleCreatingCard}>+ Add Card</a>\n      )}\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignIn/index.jsx",["176"],"import { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport \"./styles.scss\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\n\nexport default function SignIn() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { email, password } = userDetails;\n\n    return auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => history.push(\"/boards\"))\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-in-container\">\n      <Form>\n        <h1>Sign in</h1>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign in\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          <div style={{ marginBottom: \"12px\" }}>\n            <Link to=\"/forgot-password\">Forgot your password?</Link>\n          </div>\n          Don't have an account? <Link to=\"/sign-up\">Sign up</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/views/SignUp/index.jsx",["177","178"],"import { useState } from \"react\";\nimport { auth, db } from \"../../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox, Icon } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport \"./styles.scss\";\n\nexport default function SignUp() {\n  const history = useHistory();\n  const [userDetails, setUserDetails] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n    error: null,\n  });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    const { fullName, email, password } = userDetails;\n\n    return auth\n      .doCreateUserWithEmailAndPassword(email, password, fullName)\n      .then((authUser) => {\n        db.doCreateUser(authUser.user.uid, fullName, email);\n        history.push(\"/boards\");\n      })\n      .catch((error) =>\n        setUserDetails((prevState) => ({ ...prevState, error: error.message }))\n      );\n  };\n\n  const handleOnChange = (event) => {\n    event.preventDefault();\n    setUserDetails((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <Form>\n        <h1>Sign up</h1>\n\n        <Form.Item\n          name=\"fullName\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"fullName\"\n            placeholder=\"Enter your full name\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<MailOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"confirmPassword\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password\n            name=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            onChange={(e) => handleOnChange(e)}\n            prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" block onClick={(e) => handleOnSubmit(e)}>\n            Sign up\n          </Button>\n        </Form.Item>\n        {userDetails.error && (\n          <div style={{ color: \"red\", fontSize: \"0.75rem\" }}>\n            {userDetails.error}\n          </div>\n        )}\n        <Form.Item>\n          Already have an account? <Link to=\"/sign-in\">Sign in</Link>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/auth.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/db.js",["179","180"],"import { db } from \"./firebase\";\nimport { getUser } from \"./user\";\n\nconst boardsRef = db.ref(\"boards\");\nconst listsRef = db.ref(\"lists\");\nconst cardsRef = db.ref(\"cards\");\n\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email,\n  });\n\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\n\nexport const doCreateBoard = async (board) => {\n  const uid = getUser().uid;\n  const id = boardsRef.push().key;\n  await boardsRef.child(uid).child(id).set(board);\n  board.key = id;\n  return board;\n};\n\nexport const doDeleteBoard = async (boardKey) => {\n  const uid = getUser().uid;\n  await boardsRef.child(uid).child(boardKey).remove();\n};\n\nexport const doUpdateBoard = async (boardKey, title) => {\n  const uid = getUser().uid;\n  await boardsRef\n    .child(uid)\n    .child(boardKey)\n    .update({\n      ...title,\n    });\n};\n\nexport const onceGetBoards = () => {\n  const uid = getUser().uid;\n  return boardsRef.child(uid).once(\"value\");\n};\n\nexport const doEditBoard = async (boardKey, board) => {\n  const uid = getUser().uid;\n\n  await boardsRef\n    .child(uid)\n    .child(boardKey)\n    .update({\n      ...board,\n    });\n  return board;\n};\n\nexport const onceGetBoard = (boardKey) => {\n  const uid = getUser().uid;\n\n  return boardsRef.child(uid).child(`${boardKey}`).once(\"value\");\n};\n\nexport const onListMove = async (params) => {\n  const { boardKey, lists } = params;\n  console.log(lists);\n  var updates = {};\n\n  lists.forEach((list, index) => {\n    console.log(listsRef);\n    const newList = { ...list, index };\n    updates[list.key] = newList;\n  });\n\n  listsRef.child(boardKey).update(updates);\n};\n\nexport const onceGetLists = (key) => listsRef.child(key).once(\"value\");\n\nexport const doCreateList = async (boardKey, list) => {\n  let listIndex;\n  // Get amount of lists to determine new list index\n  listsRef\n    .child(boardKey)\n    .once(\"value\")\n    .then((snapshot) => {\n      const listsObject = snapshot.val();\n      listIndex = Object.keys(listsObject).length;\n    });\n\n  const id = listsRef.push().key;\n  await listsRef.child(boardKey).child(id).set(list);\n  list.key = id;\n  list.index = listIndex - 1;\n  return list;\n};\n\nexport const doDeleteList = (boardKey, listKey) =>\n  db\n    .ref(`lists/${boardKey}`)\n    .child(`${listKey}`)\n    .remove()\n    .then(() => db.ref(\"cards/\").child(`${listKey}`).remove());\n\nexport const doUpdateList = async (boardKey, listKey, list) => {\n  await listsRef\n    .child(boardKey)\n    .child(listKey)\n    .update({\n      ...list,\n    });\n  return list;\n};\n\nexport const doAddCard = async (listKey, cardTitle) => {\n  let cardIndex;\n  // Get amount of lists to determine new list index\n  await db\n    .ref(`cards/${listKey}`)\n    .once(\"value\")\n    .then((snapshot) => {\n      const cardsObject = snapshot.val();\n      if (cardsObject !== undefined && cardsObject !== null) {\n        cardIndex = Object.keys(cardsObject).length;\n      } else cardIndex = 0;\n    });\n\n  db.ref(`cards/${listKey}`).push({\n    title: cardTitle,\n    index: cardIndex,\n  });\n};\n\nexport const onceGetCard = (listKey) =>\n  db.ref(`cards/${listKey}`).once(\"value\");\n\nexport const doEditCard = async (listKey, cardKey, card) => {\n  await cardsRef\n    .child(listKey)\n    .child(cardKey)\n    .update({\n      ...card,\n    });\n  card.key = cardKey;\n  return card;\n};\n\nexport const doMoveCard = async (params) => {\n  const { oldListKey, newListKey, cardKey, newIndex, cards } = params;\n\n  // we copy the card details\n  // we remove it from the old list\n  // and we insert it in the new list\n\n  // If its same list\n  // Change\n\n  let card;\n  await db\n    .ref(`cards/${oldListKey}`)\n    .child(`${cardKey}`)\n    .once(\"value\")\n    .then((snapshot) => {\n      card = snapshot.val();\n    });\n\n  var updates = {};\n\n  cards.forEach((card, index) => {\n    const newCard = { ...card, index };\n    updates[card.key] = newCard;\n  });\n\n  db.ref(`cards/${oldListKey}`)\n    .child(`${cardKey}`)\n    .remove()\n    .then(() => {\n      // remove the card from old list\n      // and update all cards on new list\n\n      db.ref(`cards/${newListKey}`).update(updates);\n      // console.log(\"editing \");\n    });\n\n  return onceGetCard(newListKey);\n\n  // db.ref(`cards/${oldListKey}`)\n  //   .child(`${cardKey}`)\n  //   .remove()\n  //   .then(() =>\n  //     db.ref(`cards/${newListKey}/${cardKey}`).set({\n  //       ...card,\n  //     })\n  //   );\n};\n\nexport const doDeleteCard = (listKey, cardKey) =>\n  db.ref(`cards/${listKey}/`).child(`${cardKey}`).remove();\n","/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/user.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/firebase/firebase.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/utils/index.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardModal/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/providers/UserProvider.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/routes/PrivateRoute.js",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CreateBoardCard/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/Loader/index.jsx",[],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/BoardTitle/index.jsx",["181","182","183","184"],"/Users/michaelparkadze/Repos/react-trello-clone/src/components/CardModal/index.jsx",["185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"191"},{"ruleId":"189","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":20,"column":1,"nodeType":"195","endLine":122,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":6,"column":3,"nodeType":"198","messageId":"199","endLine":6,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":21,"column":1,"nodeType":"195","endLine":83,"endColumn":3},{"ruleId":"193","severity":1,"message":"194","line":11,"column":1,"nodeType":"195","endLine":40,"endColumn":3},{"ruleId":"196","severity":1,"message":"200","line":3,"column":41,"nodeType":"198","messageId":"199","endLine":3,"endColumn":46},{"ruleId":"187","replacedBy":"201"},{"ruleId":"189","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":46,"column":6,"nodeType":"205","endLine":46,"endColumn":19,"suggestions":"206"},{"ruleId":"187","replacedBy":"207"},{"ruleId":"189","replacedBy":"208"},{"ruleId":"203","severity":1,"message":"209","line":39,"column":6,"nodeType":"205","endLine":39,"endColumn":8,"suggestions":"210"},{"ruleId":"203","severity":1,"message":"211","line":13,"column":6,"nodeType":"205","endLine":13,"endColumn":8,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"213","line":27,"column":6,"nodeType":"205","endLine":27,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":69,"column":9,"nodeType":"217","endLine":69,"endColumn":41},{"ruleId":"196","severity":1,"message":"218","line":4,"column":31,"nodeType":"198","messageId":"199","endLine":4,"endColumn":39},{"ruleId":"196","severity":1,"message":"218","line":4,"column":31,"nodeType":"198","messageId":"199","endLine":4,"endColumn":39},{"ruleId":"196","severity":1,"message":"219","line":4,"column":41,"nodeType":"198","messageId":"199","endLine":4,"endColumn":45},{"ruleId":"196","severity":1,"message":"220","line":147,"column":44,"nodeType":"198","messageId":"199","endLine":147,"endColumn":52},{"ruleId":"196","severity":1,"message":"221","line":162,"column":7,"nodeType":"198","messageId":"199","endLine":162,"endColumn":11},{"ruleId":"196","severity":1,"message":"222","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"219","line":2,"column":24,"nodeType":"198","messageId":"199","endLine":2,"endColumn":28},{"ruleId":"196","severity":1,"message":"223","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":22},{"ruleId":"203","severity":1,"message":"211","line":12,"column":6,"nodeType":"205","endLine":12,"endColumn":8,"suggestions":"224"},{"ruleId":"203","severity":1,"message":"225","line":26,"column":6,"nodeType":"205","endLine":26,"endColumn":8,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":91,"column":13,"nodeType":"229","endLine":95,"endColumn":15},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'DELETE_BOARD' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.",["230"],["231"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.","ArrayExpression",["232"],["230"],["231"],"React Hook useEffect has missing dependencies: 'listKey' and 'setCards'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'props' and 'title'. Either include them or remove the dependency array.",["235"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'Icon' is defined but never used.","'newIndex' is assigned a value but never used.","'card' is assigned a value but never used.","'Form' is defined but never used.","'MoreOutlined' is defined but never used.",["236"],"React Hook useEffect has a missing dependency: 'cardDescription'. Either include it or remove the dependency array.",["237"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"242","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [cards, dataFetched]",{"range":"249","text":"250"},"Update the dependencies array to be: [listKey, setCards]",{"range":"251","text":"252"},"Update the dependencies array to be: [title]",{"range":"253","text":"254"},"Update the dependencies array to be: [props, title]",{"range":"255","text":"256"},{"range":"257","text":"254"},"Update the dependencies array to be: [cardDescription]",{"range":"258","text":"259"},[1542,1555],"[cards, dataFetched]",[956,958],"[listKey, setCards]",[427,429],"[title]",[710,712],"[props, title]",[383,385],[560,562],"[cardDescription]"]